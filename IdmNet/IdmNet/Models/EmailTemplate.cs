using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
// ReSharper disable InconsistentNaming

namespace IdmNet.Models
{
    /// <summary>
    /// EmailTemplate - Templates for email generated by notification and approval activities.
    /// </summary>
    public class EmailTemplate : IdmResource
    {
        /// <summary>
        /// Parameterless CTOR
        /// </summary>
        public EmailTemplate()
        {
            ObjectType = ForcedObjType = "EmailTemplate";
        }

        /// <summary>
        /// Build a EmailTemplate object from a IdmResource object
        /// </summary>
        /// <param name="resource">base class</param>
        public EmailTemplate(IdmResource resource)
        {
            Attributes = resource.Attributes;
            ObjectType = ForcedObjType = "EmailTemplate";
            if (resource.Creator == null)
                return;
            Creator = resource.Creator;
        }

        readonly string ForcedObjType;

        /// <summary>
        /// Object Type (can only be EmailTemplate)
        /// </summary>
        [Required]
        public override sealed string ObjectType
        {
            get { return GetAttrValue("ObjectType"); }
            set
            {
                if (value != ForcedObjType)
                    throw new InvalidOperationException("Object Type of EmailTemplate can only be 'EmailTemplate'");
                SetAttrValue("ObjectType", value);
            }
        }

        /// <summary>
        /// Body - This is the body of the e-mail. E-mails are sent as HTML and can include HTML tags if needed, e.g. br will provide a line break.
        /// </summary>
        [Required]
        public string EmailBody
        {
            get { return GetAttrValue("EmailBody"); }
            set {
                SetAttrValue("EmailBody", value); 
            }
        }


        /// <summary>
        /// Subject - This is the subject of the e-mail.
        /// </summary>
        [Required]
        public string EmailSubject
        {
            get { return GetAttrValue("EmailSubject"); }
            set {
                SetAttrValue("EmailSubject", value); 
            }
        }


        /// <summary>
        /// Template Type - This is the context this e-mail can be used in the workflow activities.
        /// </summary>
        [Required]
        public string EmailTemplateType
        {
            get { return GetAttrValue("EmailTemplateType"); }
            set {
                SetAttrValue("EmailTemplateType", value); 
            }
        }


    }
}
